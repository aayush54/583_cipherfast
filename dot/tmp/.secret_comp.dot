digraph "CFG for 'secret_comp' function" {
	label="CFG for 'secret_comp' function";

	Node0x558a8c4031c0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %p1.addr = alloca ptr, align 8\l  %m.addr = alloca ptr, align 8\l  %r1.addr = alloca ptr, align 8\l  %r2.addr = alloca ptr, align 8\l  %r3.addr = alloca ptr, align 8\l  %r4.addr = alloca ptr, align 8\l  %i = alloca i32, align 4\l  store ptr %p1, ptr %p1.addr, align 8\l  store ptr %m, ptr %m.addr, align 8\l  store ptr %r1, ptr %r1.addr, align 8\l  store ptr %r2, ptr %r2.addr, align 8\l  store ptr %r3, ptr %r3.addr, align 8\l  store ptr %r4, ptr %r4.addr, align 8\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x558a8c4031c0 -> Node0x558a8c403ef0;
	Node0x558a8c403ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %0 = load i32, ptr %i, align 4\l  %cmp = icmp slt i32 %0, 4\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x558a8c403ef0:s0 -> Node0x558a8c4040f0;
	Node0x558a8c403ef0:s1 -> Node0x558a8c404170;
	Node0x558a8c4040f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %1 = load ptr, ptr %p1.addr, align 8\l  %2 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %2 to i64\l  %arrayidx = getelementptr inbounds i8, ptr %1, i64 %idxprom\l  %3 = load i8, ptr %arrayidx, align 1\l  %conv = sext i8 %3 to i32\l  %4 = load ptr, ptr %m.addr, align 8\l  %5 = load i32, ptr %i, align 4\l  %idxprom1 = sext i32 %5 to i64\l  %arrayidx2 = getelementptr inbounds i8, ptr %4, i64 %idxprom1\l  %6 = load i8, ptr %arrayidx2, align 1\l  %conv3 = sext i8 %6 to i32\l  %add = add nsw i32 %conv, %conv3\l  %conv4 = trunc i32 %add to i8\l  %7 = load ptr, ptr %r1.addr, align 8\l  %8 = load i32, ptr %i, align 4\l  %idxprom5 = sext i32 %8 to i64\l  %arrayidx6 = getelementptr inbounds i8, ptr %7, i64 %idxprom5\l  store i8 %conv4, ptr %arrayidx6, align 1\l  %9 = load ptr, ptr %p1.addr, align 8\l  %10 = load i32, ptr %i, align 4\l  %idxprom7 = sext i32 %10 to i64\l  %arrayidx8 = getelementptr inbounds i8, ptr %9, i64 %idxprom7\l  %11 = load i8, ptr %arrayidx8, align 1\l  %conv9 = sext i8 %11 to i32\l  %12 = load ptr, ptr %m.addr, align 8\l  %13 = load i32, ptr %i, align 4\l  %idxprom10 = sext i32 %13 to i64\l  %arrayidx11 = getelementptr inbounds i8, ptr %12, i64 %idxprom10\l  %14 = load i8, ptr %arrayidx11, align 1\l  %conv12 = sext i8 %14 to i32\l  %mul = mul nsw i32 %conv9, %conv12\l  %conv13 = trunc i32 %mul to i8\l  %15 = load ptr, ptr %r2.addr, align 8\l  %16 = load i32, ptr %i, align 4\l  %idxprom14 = sext i32 %16 to i64\l  %arrayidx15 = getelementptr inbounds i8, ptr %15, i64 %idxprom14\l  store i8 %conv13, ptr %arrayidx15, align 1\l  %17 = load ptr, ptr %p1.addr, align 8\l  %18 = load i32, ptr %i, align 4\l  %idxprom16 = sext i32 %18 to i64\l  %arrayidx17 = getelementptr inbounds i8, ptr %17, i64 %idxprom16\l  %19 = load i8, ptr %arrayidx17, align 1\l  %conv18 = sext i8 %19 to i32\l  %20 = load ptr, ptr %m.addr, align 8\l  %21 = load i32, ptr %i, align 4\l  %idxprom19 = sext i32 %21 to i64\l  %arrayidx20 = getelementptr inbounds i8, ptr %20, i64 %idxprom19\l  %22 = load i8, ptr %arrayidx20, align 1\l  %conv21 = sext i8 %22 to i32\l  %sub = sub nsw i32 %conv18, %conv21\l  %conv22 = trunc i32 %sub to i8\l  %23 = load ptr, ptr %r3.addr, align 8\l  %24 = load i32, ptr %i, align 4\l  %idxprom23 = sext i32 %24 to i64\l  %arrayidx24 = getelementptr inbounds i8, ptr %23, i64 %idxprom23\l  store i8 %conv22, ptr %arrayidx24, align 1\l  %25 = load ptr, ptr %p1.addr, align 8\l  %26 = load i32, ptr %i, align 4\l  %idxprom25 = sext i32 %26 to i64\l  %arrayidx26 = getelementptr inbounds i8, ptr %25, i64 %idxprom25\l  %27 = load i8, ptr %arrayidx26, align 1\l  %conv27 = sext i8 %27 to i32\l  %28 = load ptr, ptr %m.addr, align 8\l  %29 = load i32, ptr %i, align 4\l  %idxprom28 = sext i32 %29 to i64\l  %arrayidx29 = getelementptr inbounds i8, ptr %28, i64 %idxprom28\l  %30 = load i8, ptr %arrayidx29, align 1\l  %conv30 = sext i8 %30 to i32\l  %rem = srem i32 %conv27, %conv30\l  %conv31 = trunc i32 %rem to i8\l  %31 = load ptr, ptr %r4.addr, align 8\l  %32 = load i32, ptr %i, align 4\l  %idxprom32 = sext i32 %32 to i64\l  %arrayidx33 = getelementptr inbounds i8, ptr %31, i64 %idxprom32\l  store i8 %conv31, ptr %arrayidx33, align 1\l  br label %for.inc\l}"];
	Node0x558a8c4040f0 -> Node0x558a8c404600;
	Node0x558a8c404600 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %33 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %33, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x558a8c404600 -> Node0x558a8c403ef0;
	Node0x558a8c404170 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end:                                          \l  ret void\l}"];
}
