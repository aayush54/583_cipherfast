digraph "CFG for 'public_comp' function" {
	label="CFG for 'public_comp' function";

	Node0x555604296470 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %result.addr = alloca ptr, align 8\l  %input1.addr = alloca ptr, align 8\l  %input2.addr = alloca ptr, align 8\l  %size.addr = alloca i32, align 4\l  %r = alloca [4 x i8], align 1\l  %i = alloca i32, align 4\l  %i7 = alloca i32, align 4\l  store ptr %result, ptr %result.addr, align 8\l  store ptr %input1, ptr %input1.addr, align 8\l  store ptr %input2, ptr %input2.addr, align 8\l  store i32 %size, ptr %size.addr, align 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %r, ptr align 1\l... @__const.public_comp.r, i64 4, i1 false)\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x555604296470 -> Node0x555604296eb0;
	Node0x555604296eb0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %0 = load i32, ptr %i, align 4\l  %1 = load i32, ptr %size.addr, align 4\l  %cmp = icmp slt i32 %0, %1\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x555604296eb0:s0 -> Node0x5556042972a0;
	Node0x555604296eb0:s1 -> Node0x5556042972f0;
	Node0x5556042972a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %2 = load ptr, ptr %input1.addr, align 8\l  %3 = load i32, ptr %i, align 4\l  %idxprom = sext i32 %3 to i64\l  %arrayidx = getelementptr inbounds i8, ptr %2, i64 %idxprom\l  %4 = load i8, ptr %arrayidx, align 1\l  %conv = sext i8 %4 to i32\l  %5 = load ptr, ptr %input2.addr, align 8\l  %6 = load i32, ptr %i, align 4\l  %idxprom1 = sext i32 %6 to i64\l  %arrayidx2 = getelementptr inbounds i8, ptr %5, i64 %idxprom1\l  %7 = load i8, ptr %arrayidx2, align 1\l  %conv3 = sext i8 %7 to i32\l  %mul = mul nsw i32 %conv, %conv3\l  %conv4 = trunc i32 %mul to i8\l  %8 = load ptr, ptr %result.addr, align 8\l  %9 = load i32, ptr %i, align 4\l  %idxprom5 = sext i32 %9 to i64\l  %arrayidx6 = getelementptr inbounds i8, ptr %8, i64 %idxprom5\l  store i8 %conv4, ptr %arrayidx6, align 1\l  br label %for.inc\l}"];
	Node0x5556042972a0 -> Node0x555604297730;
	Node0x555604297730 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %10 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %10, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x555604297730 -> Node0x555604296eb0;
	Node0x5556042972f0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end:                                          \l  store i32 0, ptr %i7, align 4\l  br label %for.cond8\l}"];
	Node0x5556042972f0 -> Node0x555604298790;
	Node0x555604298790 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond8:                                        \l  %11 = load i32, ptr %i7, align 4\l  %12 = load i32, ptr %size.addr, align 4\l  %cmp9 = icmp slt i32 %11, %12\l  br i1 %cmp9, label %for.body11, label %for.end21\l|{<s0>T|<s1>F}}"];
	Node0x555604298790:s0 -> Node0x555604298a10;
	Node0x555604298790:s1 -> Node0x555604298a90;
	Node0x555604298a10 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body11:                                       \l  %13 = load i32, ptr %i7, align 4\l  %idxprom12 = sext i32 %13 to i64\l  %arrayidx13 = getelementptr inbounds [4 x i8], ptr %r, i64 0, i64 %idxprom12\l  %14 = load i8, ptr %arrayidx13, align 1\l  %conv14 = sext i8 %14 to i32\l  %15 = load ptr, ptr %result.addr, align 8\l  %16 = load i32, ptr %i7, align 4\l  %idxprom15 = sext i32 %16 to i64\l  %arrayidx16 = getelementptr inbounds i8, ptr %15, i64 %idxprom15\l  %17 = load i8, ptr %arrayidx16, align 1\l  %conv17 = sext i8 %17 to i32\l  %add = add nsw i32 %conv17, %conv14\l  %conv18 = trunc i32 %add to i8\l  store i8 %conv18, ptr %arrayidx16, align 1\l  br label %for.inc19\l}"];
	Node0x555604298a10 -> Node0x555604299380;
	Node0x555604299380 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc19:                                        \l  %18 = load i32, ptr %i7, align 4\l  %inc20 = add nsw i32 %18, 1\l  store i32 %inc20, ptr %i7, align 4\l  br label %for.cond8, !llvm.loop !8\l}"];
	Node0x555604299380 -> Node0x555604298790;
	Node0x555604298a90 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end21:                                        \l  ret void\l}"];
}
