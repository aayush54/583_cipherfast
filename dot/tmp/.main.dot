digraph "CFG for 'main' function" {
	label="CFG for 'main' function";

	Node0x55560429b4a0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{entry:\l  %retval = alloca i32, align 4\l  %key = alloca [16 x i8], align 16\l  %charset = alloca [63 x i8], align 16\l  %i = alloca i32, align 4\l  %m = alloca [16 x i8], align 16\l  %p1 = alloca ptr, align 8\l  %p2 = alloca ptr, align 8\l  %p3 = alloca ptr, align 8\l  %p4 = alloca ptr, align 8\l  %result1 = alloca [4 x i8], align 1\l  %result2 = alloca [4 x i8], align 1\l  %result3 = alloca [4 x i8], align 1\l  %result4 = alloca [4 x i8], align 1\l  %pub1 = alloca [4 x i8], align 1\l  %pub2 = alloca [4 x i8], align 1\l  %pub3 = alloca [4 x i8], align 1\l  %mix = alloca [4 x i8], align 1\l  %i29 = alloca i32, align 4\l  %i40 = alloca i32, align 4\l  %i53 = alloca i32, align 4\l  %i66 = alloca i32, align 4\l  %i79 = alloca i32, align 4\l  %i92 = alloca i32, align 4\l  store i32 0, ptr %retval, align 4\l  call void @llvm.memset.p0.i64(ptr align 16 %key, i8 0, i64 16, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %charset, ptr align 16\l... @__const.main.charset, i64 63, i1 false)\l  store i32 0, ptr %i, align 4\l  br label %for.cond\l}"];
	Node0x55560429b4a0 -> Node0x555604294cd0;
	Node0x555604294cd0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond:                                         \l  %0 = load i32, ptr %i, align 4\l  %cmp = icmp slt i32 %0, 16\l  br i1 %cmp, label %for.body, label %for.end\l|{<s0>T|<s1>F}}"];
	Node0x555604294cd0:s0 -> Node0x5556042951b0;
	Node0x555604294cd0:s1 -> Node0x555604295230;
	Node0x5556042951b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body:                                         \l  %1 = load i32, ptr %i, align 4\l  %mul = mul nsw i32 3, %1\l  %idxprom = sext i32 %mul to i64\l  %arrayidx = getelementptr inbounds [63 x i8], ptr %charset, i64 0, i64\l... %idxprom\l  %2 = load i8, ptr %arrayidx, align 1\l  %3 = load i32, ptr %i, align 4\l  %idxprom1 = sext i32 %3 to i64\l  %arrayidx2 = getelementptr inbounds [16 x i8], ptr %key, i64 0, i64 %idxprom1\l  store i8 %2, ptr %arrayidx2, align 1\l  br label %for.inc\l}"];
	Node0x5556042951b0 -> Node0x55560429e580;
	Node0x55560429e580 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc:                                          \l  %4 = load i32, ptr %i, align 4\l  %inc = add nsw i32 %4, 1\l  store i32 %inc, ptr %i, align 4\l  br label %for.cond, !llvm.loop !6\l}"];
	Node0x55560429e580 -> Node0x555604294cd0;
	Node0x555604295230 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end:                                          \l  call void @llvm.memcpy.p0.p0.i64(ptr align 16 %m, ptr align 16\l... @__const.main.m, i64 16, i1 false)\l  %arraydecay = getelementptr inbounds [16 x i8], ptr %key, i64 0, i64 0\l  call void @classify(ptr noundef %arraydecay, i32 noundef 16)\l  %arraydecay3 = getelementptr inbounds [16 x i8], ptr %m, i64 0, i64 0\l  call void @classify(ptr noundef %arraydecay3, i32 noundef 16)\l  %call = call noalias ptr @malloc(i64 noundef 4) #5\l  store ptr %call, ptr %p1, align 8\l  %call4 = call noalias ptr @malloc(i64 noundef 4) #5\l  store ptr %call4, ptr %p2, align 8\l  %call5 = call noalias ptr @malloc(i64 noundef 4) #5\l  store ptr %call5, ptr %p3, align 8\l  %call6 = call noalias ptr @malloc(i64 noundef 4) #5\l  store ptr %call6, ptr %p4, align 8\l  %5 = load ptr, ptr %p1, align 8\l  %arraydecay7 = getelementptr inbounds [16 x i8], ptr %key, i64 0, i64 0\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %5, ptr align 16 %arraydecay7,\l... i64 4, i1 false)\l  %6 = load ptr, ptr %p2, align 8\l  %arraydecay8 = getelementptr inbounds [16 x i8], ptr %key, i64 0, i64 0\l  %add.ptr = getelementptr inbounds i8, ptr %arraydecay8, i64 4\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %6, ptr align 1 %add.ptr, i64\l... 4, i1 false)\l  %7 = load ptr, ptr %p3, align 8\l  %arraydecay9 = getelementptr inbounds [16 x i8], ptr %key, i64 0, i64 0\l  %add.ptr10 = getelementptr inbounds i8, ptr %arraydecay9, i64 8\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %7, ptr align 1 %add.ptr10, i64\l... 4, i1 false)\l  %8 = load ptr, ptr %p4, align 8\l  %arraydecay11 = getelementptr inbounds [16 x i8], ptr %key, i64 0, i64 0\l  %add.ptr12 = getelementptr inbounds i8, ptr %arraydecay11, i64 12\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %8, ptr align 1 %add.ptr12, i64\l... 4, i1 false)\l  %9 = load ptr, ptr %p1, align 8\l  %arraydecay13 = getelementptr inbounds [16 x i8], ptr %m, i64 0, i64 0\l  %arraydecay14 = getelementptr inbounds [4 x i8], ptr %result1, i64 0, i64 0\l  %arraydecay15 = getelementptr inbounds [4 x i8], ptr %result2, i64 0, i64 0\l  %arraydecay16 = getelementptr inbounds [4 x i8], ptr %result3, i64 0, i64 0\l  %arraydecay17 = getelementptr inbounds [4 x i8], ptr %result4, i64 0, i64 0\l  call void @secret_comp(ptr noundef %9, ptr noundef %arraydecay13, ptr\l... noundef %arraydecay14, ptr noundef %arraydecay15, ptr noundef %arraydecay16,\l... ptr noundef %arraydecay17)\l  %10 = load ptr, ptr %p2, align 8\l  %arraydecay18 = getelementptr inbounds [16 x i8], ptr %m, i64 0, i64 0\l  %arraydecay19 = getelementptr inbounds [4 x i8], ptr %result1, i64 0, i64 0\l  %arraydecay20 = getelementptr inbounds [4 x i8], ptr %result2, i64 0, i64 0\l  %arraydecay21 = getelementptr inbounds [4 x i8], ptr %result3, i64 0, i64 0\l  %arraydecay22 = getelementptr inbounds [4 x i8], ptr %result4, i64 0, i64 0\l  call void @secret_comp(ptr noundef %10, ptr noundef %arraydecay18, ptr\l... noundef %arraydecay19, ptr noundef %arraydecay20, ptr noundef %arraydecay21,\l... ptr noundef %arraydecay22)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %pub1, ptr align 1\l... @__const.main.pub1, i64 4, i1 false)\l  call void @llvm.memcpy.p0.p0.i64(ptr align 1 %pub2, ptr align 1\l... @__const.main.pub2, i64 4, i1 false)\l  %arraydecay23 = getelementptr inbounds [4 x i8], ptr %pub3, i64 0, i64 0\l  %arraydecay24 = getelementptr inbounds [4 x i8], ptr %pub1, i64 0, i64 0\l  %arraydecay25 = getelementptr inbounds [4 x i8], ptr %pub2, i64 0, i64 0\l  call void @public_comp(ptr noundef %arraydecay23, ptr noundef %arraydecay24,\l... ptr noundef %arraydecay25, i32 noundef 4)\l  %arraydecay26 = getelementptr inbounds [4 x i8], ptr %mix, i64 0, i64 0\l  %arraydecay27 = getelementptr inbounds [4 x i8], ptr %pub3, i64 0, i64 0\l  %arraydecay28 = getelementptr inbounds [4 x i8], ptr %result1, i64 0, i64 0\l  call void @mix_comp(ptr noundef %arraydecay26, ptr noundef %arraydecay27,\l... ptr noundef %arraydecay28, i32 noundef 4)\l  store i32 0, ptr %i29, align 4\l  br label %for.cond30\l}"];
	Node0x555604295230 -> Node0x5556042a23e0;
	Node0x5556042a23e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond30:                                       \l  %11 = load i32, ptr %i29, align 4\l  %cmp31 = icmp slt i32 %11, 4\l  br i1 %cmp31, label %for.body32, label %for.end38\l|{<s0>T|<s1>F}}"];
	Node0x5556042a23e0:s0 -> Node0x5556042a25a0;
	Node0x5556042a23e0:s1 -> Node0x5556042a2620;
	Node0x5556042a25a0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body32:                                       \l  %12 = load i32, ptr %i29, align 4\l  %idxprom33 = sext i32 %12 to i64\l  %arrayidx34 = getelementptr inbounds [4 x i8], ptr %result1, i64 0, i64\l... %idxprom33\l  %13 = load i8, ptr %arrayidx34, align 1\l  %conv = sext i8 %13 to i32\l  %call35 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef %conv)\l  br label %for.inc36\l}"];
	Node0x5556042a25a0 -> Node0x5556042a2bc0;
	Node0x5556042a2bc0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc36:                                        \l  %14 = load i32, ptr %i29, align 4\l  %inc37 = add nsw i32 %14, 1\l  store i32 %inc37, ptr %i29, align 4\l  br label %for.cond30, !llvm.loop !8\l}"];
	Node0x5556042a2bc0 -> Node0x5556042a23e0;
	Node0x5556042a2620 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end38:                                        \l  %call39 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  store i32 0, ptr %i40, align 4\l  br label %for.cond41\l}"];
	Node0x5556042a2620 -> Node0x5556042a31c0;
	Node0x5556042a31c0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond41:                                       \l  %15 = load i32, ptr %i40, align 4\l  %cmp42 = icmp slt i32 %15, 4\l  br i1 %cmp42, label %for.body44, label %for.end51\l|{<s0>T|<s1>F}}"];
	Node0x5556042a31c0:s0 -> Node0x5556042a33d0;
	Node0x5556042a31c0:s1 -> Node0x5556042a3450;
	Node0x5556042a33d0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body44:                                       \l  %16 = load i32, ptr %i40, align 4\l  %idxprom45 = sext i32 %16 to i64\l  %arrayidx46 = getelementptr inbounds [4 x i8], ptr %result2, i64 0, i64\l... %idxprom45\l  %17 = load i8, ptr %arrayidx46, align 1\l  %conv47 = sext i8 %17 to i32\l  %call48 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef\l... %conv47)\l  br label %for.inc49\l}"];
	Node0x5556042a33d0 -> Node0x5556042a39b0;
	Node0x5556042a39b0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc49:                                        \l  %18 = load i32, ptr %i40, align 4\l  %inc50 = add nsw i32 %18, 1\l  store i32 %inc50, ptr %i40, align 4\l  br label %for.cond41, !llvm.loop !9\l}"];
	Node0x5556042a39b0 -> Node0x5556042a31c0;
	Node0x5556042a3450 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end51:                                        \l  %call52 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  store i32 0, ptr %i53, align 4\l  br label %for.cond54\l}"];
	Node0x5556042a3450 -> Node0x5556042a3f20;
	Node0x5556042a3f20 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond54:                                       \l  %19 = load i32, ptr %i53, align 4\l  %cmp55 = icmp slt i32 %19, 4\l  br i1 %cmp55, label %for.body57, label %for.end64\l|{<s0>T|<s1>F}}"];
	Node0x5556042a3f20:s0 -> Node0x5556042a4130;
	Node0x5556042a3f20:s1 -> Node0x5556042a41b0;
	Node0x5556042a4130 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body57:                                       \l  %20 = load i32, ptr %i53, align 4\l  %idxprom58 = sext i32 %20 to i64\l  %arrayidx59 = getelementptr inbounds [4 x i8], ptr %result3, i64 0, i64\l... %idxprom58\l  %21 = load i8, ptr %arrayidx59, align 1\l  %conv60 = sext i8 %21 to i32\l  %call61 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef\l... %conv60)\l  br label %for.inc62\l}"];
	Node0x5556042a4130 -> Node0x5556042a4710;
	Node0x5556042a4710 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc62:                                        \l  %22 = load i32, ptr %i53, align 4\l  %inc63 = add nsw i32 %22, 1\l  store i32 %inc63, ptr %i53, align 4\l  br label %for.cond54, !llvm.loop !10\l}"];
	Node0x5556042a4710 -> Node0x5556042a3f20;
	Node0x5556042a41b0 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end64:                                        \l  %call65 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  store i32 0, ptr %i66, align 4\l  br label %for.cond67\l}"];
	Node0x5556042a41b0 -> Node0x5556042a06e0;
	Node0x5556042a06e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond67:                                       \l  %23 = load i32, ptr %i66, align 4\l  %cmp68 = icmp slt i32 %23, 4\l  br i1 %cmp68, label %for.body70, label %for.end77\l|{<s0>T|<s1>F}}"];
	Node0x5556042a06e0:s0 -> Node0x5556042a08f0;
	Node0x5556042a06e0:s1 -> Node0x5556042a0970;
	Node0x5556042a08f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body70:                                       \l  %24 = load i32, ptr %i66, align 4\l  %idxprom71 = sext i32 %24 to i64\l  %arrayidx72 = getelementptr inbounds [4 x i8], ptr %result4, i64 0, i64\l... %idxprom71\l  %25 = load i8, ptr %arrayidx72, align 1\l  %conv73 = sext i8 %25 to i32\l  %call74 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef\l... %conv73)\l  br label %for.inc75\l}"];
	Node0x5556042a08f0 -> Node0x5556042a5b00;
	Node0x5556042a5b00 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc75:                                        \l  %26 = load i32, ptr %i66, align 4\l  %inc76 = add nsw i32 %26, 1\l  store i32 %inc76, ptr %i66, align 4\l  br label %for.cond67, !llvm.loop !11\l}"];
	Node0x5556042a5b00 -> Node0x5556042a06e0;
	Node0x5556042a0970 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end77:                                        \l  %call78 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  store i32 0, ptr %i79, align 4\l  br label %for.cond80\l}"];
	Node0x5556042a0970 -> Node0x5556042a6100;
	Node0x5556042a6100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond80:                                       \l  %27 = load i32, ptr %i79, align 4\l  %cmp81 = icmp slt i32 %27, 4\l  br i1 %cmp81, label %for.body83, label %for.end90\l|{<s0>T|<s1>F}}"];
	Node0x5556042a6100:s0 -> Node0x5556042a6310;
	Node0x5556042a6100:s1 -> Node0x5556042a6390;
	Node0x5556042a6310 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body83:                                       \l  %28 = load i32, ptr %i79, align 4\l  %idxprom84 = sext i32 %28 to i64\l  %arrayidx85 = getelementptr inbounds [4 x i8], ptr %pub3, i64 0, i64\l... %idxprom84\l  %29 = load i8, ptr %arrayidx85, align 1\l  %conv86 = sext i8 %29 to i32\l  %call87 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef\l... %conv86)\l  br label %for.inc88\l}"];
	Node0x5556042a6310 -> Node0x5556042a68f0;
	Node0x5556042a68f0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc88:                                        \l  %30 = load i32, ptr %i79, align 4\l  %inc89 = add nsw i32 %30, 1\l  store i32 %inc89, ptr %i79, align 4\l  br label %for.cond80, !llvm.loop !12\l}"];
	Node0x5556042a68f0 -> Node0x5556042a6100;
	Node0x5556042a6390 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end90:                                        \l  %call91 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  store i32 0, ptr %i92, align 4\l  br label %for.cond93\l}"];
	Node0x5556042a6390 -> Node0x5556042a6ef0;
	Node0x5556042a6ef0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#b70d2870",label="{for.cond93:                                       \l  %31 = load i32, ptr %i92, align 4\l  %cmp94 = icmp slt i32 %31, 4\l  br i1 %cmp94, label %for.body96, label %for.end103\l|{<s0>T|<s1>F}}"];
	Node0x5556042a6ef0:s0 -> Node0x5556042a7100;
	Node0x5556042a6ef0:s1 -> Node0x5556042a7180;
	Node0x5556042a7100 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.body96:                                       \l  %32 = load i32, ptr %i92, align 4\l  %idxprom97 = sext i32 %32 to i64\l  %arrayidx98 = getelementptr inbounds [4 x i8], ptr %mix, i64 0, i64\l... %idxprom97\l  %33 = load i8, ptr %arrayidx98, align 1\l  %conv99 = sext i8 %33 to i32\l  %call100 = call i32 (ptr, ...) @printf(ptr noundef @.str.2, i32 noundef\l... %conv99)\l  br label %for.inc101\l}"];
	Node0x5556042a7100 -> Node0x5556042a76e0;
	Node0x5556042a76e0 [shape=record,color="#b70d28ff", style=filled, fillcolor="#bb1b2c70",label="{for.inc101:                                       \l  %34 = load i32, ptr %i92, align 4\l  %inc102 = add nsw i32 %34, 1\l  store i32 %inc102, ptr %i92, align 4\l  br label %for.cond93, !llvm.loop !13\l}"];
	Node0x5556042a76e0 -> Node0x5556042a6ef0;
	Node0x5556042a7180 [shape=record,color="#3d50c3ff", style=filled, fillcolor="#b9d0f970",label="{for.end103:                                       \l  %call104 = call i32 (ptr, ...) @printf(ptr noundef @.str.3)\l  ret i32 0\l}"];
}
